{
  "uid" : "ad25e0f68c061049",
  "name" : "TestCheckInit.test_self",
  "title" : "Test self",
  "time" : {
    "start" : 1525896818143,
    "stop" : 1525896818152,
    "duration" : 9
  },
  "summary" : {
    "attachments" : 1,
    "steps" : 0
  },
  "failure" : {
    "message" : "TypeError: expected string or buffer",
    "stackTrace" : "self = <test_first.TestCheckInit instance at 0x7f54f2f4d200>\n\n    @allure.feature(\"Incorrect input\")\n    @allure.story(\"Checking the output with param as self 'check_init' function\")\n    def test_self(self):\n>       result = Check.check_ident(Check.check_ident(\"98765-43219 9\"))\n\ntest_first.py:53: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nCheck.py:4: in check_ident\n    if not re.match('^\\d{5}-\\d{5} \\d$', ident):\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\npattern = '^\\\\d{5}-\\\\d{5} \\\\d$', string = True, flags = 0\n\n    def match(pattern, string, flags=0):\n        \"\"\"Try to apply the pattern at the start of the string, returning\n        a match object, or None if no match was found.\"\"\"\n>       return _compile(pattern, flags).match(string)\nE       TypeError: expected string or buffer\n\n../../miniconda2/lib/python2.7/re.py:141: TypeError"
  },
  "description" : null,
  "severity" : "NORMAL",
  "status" : "FAILED",
  "testId" : null,
  "suite" : {
    "uid" : "171b12f4df0d7f10",
    "name" : "test_first",
    "title" : "Test first"
  },
  "steps" : [ ],
  "attachments" : [ {
    "title" : "Captured stdout call",
    "source" : "0ee79a3b-0cf6-4c6c-879a-2604fe961a80-attachment.txt",
    "type" : "text/plain",
    "size" : 4,
    "uid" : "d45c904a48f9cbac"
  } ],
  "issues" : [ ],
  "labels" : [ {
    "name" : "feature",
    "value" : "Incorrect input"
  }, {
    "name" : "suite-name",
    "value" : "test_first"
  }, {
    "name" : "story",
    "value" : "Checking the output with param as self 'check_init' function"
  }, {
    "name" : "thread",
    "value" : "5618-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "suite-title",
    "value" : null
  }, {
    "name" : "host",
    "value" : "familypc"
  }, {
    "name" : "severity",
    "value" : "normal"
  }, {
    "name" : "language",
    "value" : "cpython2"
  } ],
  "parameters" : [ ]
}